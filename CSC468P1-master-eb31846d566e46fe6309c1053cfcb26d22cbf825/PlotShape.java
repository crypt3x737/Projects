/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.util.Iterator;
import java.util.Vector;

/**
 *
 * @author 7249805
 */
public class PlotShape extends javax.swing.JPanel {

    Bone_Description_Parser masterBoneFile;

    /**
     * Creates new form PlotShape
     */    
    public PlotShape(Bone_Description_Parser bone_obj) {
        masterBoneFile = bone_obj;
        repaint();
        setVisible(true);
    }
    
    public Dimension getPreferredSize() {
        return new Dimension(600, 600);
    }
    
    public void paintComponent(Graphics g) {      
        
        super.paint(g);

//        for (int i = 0; i < masterBoneFile.bone_description.size(); i++) {
//            int scale = 100;
//            Bone_Description currentBone = new Bone_Description();
//            currentBone = masterBoneFile.bone_description.elementAt(i);
//            for (int j = 0; j < currentBone.polylines.size()-1; j++)
//            {     
//                Double x1 = ((currentBone.polylines.get(j).getX() - masterBoneFile.bone_description.get(i).x_min) / (masterBoneFile.bone_description.get(i).x_max - masterBoneFile.bone_description.get(i).x_min)) * scale;
//                Double y1 = ((currentBone.polylines.get(j).getY() - masterBoneFile.bone_description.get(i).y_min) / (masterBoneFile.bone_description.get(i).y_max - masterBoneFile.bone_description.get(i).y_min)) * scale;
//                Double x2 = ((currentBone.polylines.get(j+1).getX() - masterBoneFile.bone_description.get(i).x_min) / (masterBoneFile.bone_description.get(i).x_max - masterBoneFile.bone_description.get(i).x_min)) * scale;
//                Double y2 = ((currentBone.polylines.get(j+1).getY() - masterBoneFile.bone_description.get(i).y_min) / (masterBoneFile.bone_description.get(i).y_max - masterBoneFile.bone_description.get(i).y_min)) * scale;
//                g.drawLine(x1.intValue(), y1.intValue(), x2.intValue(), y2.intValue());
//                //System.out.println(x1 + "    " + y1 + "    " + x2 + "       " + y2);
//            }
//        }

        g.drawLine(80, 80, 800, 800);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(java.awt.Color.white);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
